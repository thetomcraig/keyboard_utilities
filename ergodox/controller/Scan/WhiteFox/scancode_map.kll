# Whitefox

Name = WhiteFox;
Version = 0.6;
Author = "HaaTa (Jacob Alexander) 2015-2017";
KLL = 0.5;

# Modified Date
Date = 2017-11-26;


#
# Defines available to the Whitefox Scan Module
#


# Driver Chip
ISSI_Chip_31FL3731 = 1;

# Available ISSI Chips
ISSI_Chips = 1;

# I2C Buses
ISSI_I2C_Buses = 1; # 1 by default

# I2C LED Struct Definition
LED_BufferStruct = "
typedef struct LED_Buffer {
	uint16_t i2c_addr;
	uint16_t reg_addr;
	uint16_t buffer[144];
} LED_Buffer;
volatile LED_Buffer LED_pageBuffer[ ISSI_Chips_define ];
";


# FPS Target
# Each ISSI chip setup has a different optimal framerate.
# This setting specifies a target frame rate. This is sort've like "V-Sync" on monitors.
# So the framerate will not go above this amount.
# If the framerate goes below, ledFPS cli will issue warnings when enabled.
ISSI_FrameRate_ms => ISSI_FrameRate_ms_define;
ISSI_FrameRate_ms = 10; # 1000 / <ISSI_FrameRate_ms> = 100 fps


# LED Default Enable Mask Override
#
# Each LED is represented by a single bit
# See (http://www.issi.com/WW/pdf/31FL3731C.pdf) for details
ISSILedMask1 = "
	0xFF, 0x00, /* C1-1 -> C1-16 */
	0xFF, 0x00, /* C2-1 -> C2-16 */
	0xFF, 0x00, /* C3-1 -> C3-16 */
	0xFF, 0x00, /* C4-1 -> C4-16 */
	0xFF, 0x00, /* C5-1 -> C5-16 */
	0xFF, 0x00, /* C6-1 -> C6-16 */
	0xFF, 0x00, /* C7-1 -> C7-16 */
	0xFF, 0x00, /* C8-1 -> C8-16 */
	0xFF, 0x00, /* C9-1 -> C9-16 */
";



### Pixel Buffer Setup ###
# Defines channel mappings, changing the order will affect Pixel definitions

Pixel_Buffer_Size[]    =   0; # Starting channel for each buffer
Pixel_Buffer_Width[]   =  16; # Width of each channel buffer (may be different than effective channel size)
Pixel_Buffer_Length[]  = 144; # Length of each buffer (count, not bytes)
Pixel_Buffer_Buffer[0] = "LED_pageBuffer[0].buffer"; # Pointer to the start of the buffer

# Channel Optimizations
Pixel_HardCode_ChanWidth = 8;
Pixel_HardCode_Channels = 1;



### Pixel Display Mapping Parameters ###
Pixel_DisplayMapping_UnitSize = 19; # Default unit spacing in mm
Pixel_DisplayMapping_ColumnSize = 1;
Pixel_DisplayMapping_RowSize = 2;
Pixel_DisplayMapping_ColumnDirection = -1;
Pixel_DisplayMapping_RowDirection = 1;



### Pixel Mapping ###
# Organizes each of the channels into pixels (may, or may not be multi-channel)

# Number Row (1-16)
P[  1](  0:8) : S1;
P[  2](  1:8) : S2;
P[  3](  2:8) : S3;
P[  4](  3:8) : S4;
P[  5](  4:8) : S5;
P[  6](  5:8) : S6;
P[  7](  6:8) : S7;
P[  8](  7:8) : S8;
P[  9]( 16:8) : S9;
P[ 10]( 17:8) : S10;
P[ 11]( 18:8) : S11;
P[ 12]( 19:8) : S12;
P[ 13]( 20:8) : S13;
P[ 14]( 21:8) : S14;
P[ 15]( 22:8) : S15;
P[ 16]( 23:8) : S16;

# Top Alpha Row (17-31)
P[ 17]( 32:8) : S17;
P[ 18]( 33:8) : S18;
P[ 19]( 34:8) : S19;
P[ 20]( 35:8) : S20;
P[ 21]( 36:8) : S21;
P[ 22]( 37:8) : S22;
P[ 23]( 38:8) : S23;
P[ 24]( 39:8) : S24;
P[ 25]( 48:8) : S25;
P[ 26]( 49:8) : S26;
P[ 27]( 50:8) : S27;
P[ 28]( 51:8) : S28;
P[ 29]( 52:8) : S29;
P[ 30]( 53:8) : S30;
P[ 31]( 54:8) : S31;

# Mid Alpha Row (32-46)
P[ 32]( 55:8) : S32;
P[ 33]( 64:8) : S33;
P[ 34]( 65:8) : S34;
P[ 35]( 66:8) : S35;
P[ 36]( 67:8) : S36;
P[ 37]( 68:8) : S37;
P[ 38]( 69:8) : S38;
P[ 39]( 70:8) : S39;
P[ 40]( 71:8) : S40;
P[ 41]( 80:8) : S41;
P[ 42]( 81:8) : S42;
P[ 43]( 82:8) : S43;
P[ 44]( 83:8) : S44;
P[ 45]( 84:8) : S45;
P[ 46]( 85:8) : S46;

# Low Alpha Row (47-61)
P[ 47]( 86:8) : S47;
P[ 48]( 87:8) : S48;
P[ 49]( 96:8) : S49;
P[ 50]( 97:8) : S50;
P[ 51]( 98:8) : S51;
P[ 52]( 99:8) : S52;
P[ 53](100:8) : S53;
P[ 54](101:8) : S54;
P[ 55](102:8) : S55;
P[ 56](103:8) : S56;
P[ 57](112:8) : S57;
P[ 58](113:8) : S58;
P[ 59](114:8) : S59;
P[ 60](115:8) : S60;
P[ 61](116:8) : S61;

# Mod Row (62-71)
P[ 62](117:8) : S62;
P[ 63](118:8) : S63;
P[ 64](119:8) : S64;
P[ 65](128:8) : S65;
P[ 66](129:8) : S66;
P[ 67](130:8) : S67;
P[ 68](131:8) : S68;
P[ 69](132:8) : S69;
P[ 70](133:8) : S70;
P[ 71](134:8) : S71;

